@page "/"
@using MyPokedex.Data
@using MudBlazor

<PageTitle>Home</PageTitle>

<MudGrid>
    <MudItem xs="12" sm="6" md="4">
        <MudAutocomplete T="PokemonBase" Label="Pokemon" @bind-Value="selectedPokemon"
                         SearchFunc="@SearchPokemon" ToStringFunc="@(p => p?.Name)" />
    </MudItem>
    <MudItem xs="12" md="12">
        <MudButton @onclick="GetSelectedPokemon">Get Pokemon Infos</MudButton>
    </MudItem>
</MudGrid>

@if (pokedex.SelectedPokemon != null)
{
    <MudCard Width="25%">
        <div class="d-flex align-items-center justify-content-center">
            <MudText Typo="Typo.h4" Color="Color.Success">@pokedex.SelectedPokemon.Name</MudText>
        </div>
    </MudCard>
}

<MudImage Src="https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/shiny/1.png" Alt="Bulbazaur"/>

@code{
    private Pokedex pokedex = new Pokedex();
    private PokemonBase selectedPokemon;

    protected override async Task OnInitializedAsync()
    {
        await pokedex.GetPokemon();

        await base.OnInitializedAsync();
    }

    private async Task<IEnumerable<PokemonBase>> SearchPokemon(string searchText)
    {

        // Use your Pokedex service or repository to search for Pokemon by name
        var pokemonList = await pokedex.SearchByName(searchText);
        return pokemonList;
    }

    private async Task GetSelectedPokemon()
    {
        if (selectedPokemon != null)
        {
            await pokedex.GetPokemonInfos(selectedPokemon.Name);
        }
    }

    

}